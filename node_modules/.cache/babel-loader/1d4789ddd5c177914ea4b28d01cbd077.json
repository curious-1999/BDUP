{"ast":null,"code":"import React from'react';import{useForm}from'react-hook-form';import{Form,Button}from'react-bootstrap';import{motion}from'framer-motion';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FirstStep=function FirstStep(props){var user=props.user;var _useForm=useForm({defaultValues:{first_name:user.first_name,last_name:user.last_name,user_email:user.user_email,user_password:user.user_password}}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var onSubmit=function onSubmit(data){props.updateUser(data);console.log(props);props.history.push('/second');};return/*#__PURE__*/_jsx(Form,{className:\"input-form\",onSubmit:handleSubmit(onSubmit),children:/*#__PURE__*/_jsxs(motion.div,{className:\"col-md-6 offset-md-3\",initial:{x:'-100vw'},animate:{x:0},transition:{stiffness:150},children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"first_name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"First Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"first_name\",placeholder:\"Enter your first name\",autoComplete:\"off\",ref:register({required:'First name is required.',pattern:{value:/^[a-zA-Z]+$/,message:'First name should contain only characters.'}}),className:\"\".concat(errors.first_name?'input-error':'')}),errors.first_name&&/*#__PURE__*/_jsx(\"p\",{className:\"errorMsg\",children:errors.first_name.message})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"last_name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Last Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"last_name\",placeholder:\"Enter your last name\",autoComplete:\"off\",ref:register({required:'Last name is required.',pattern:{value:/^[a-zA-Z]+$/,message:'Last name should contain only characters.'}}),className:\"\".concat(errors.last_name?'input-error':'')}),errors.last_name&&/*#__PURE__*/_jsx(\"p\",{className:\"errorMsg\",children:errors.last_name.message})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"user_email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",name:\"user_email\",placeholder:\"Enter your email address\",autoComplete:\"off\",ref:register({required:'Email is required.',pattern:{value:/^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,message:'Email is not valid.'}}),className:\"\".concat(errors.user_email?'input-error':'')}),errors.user_email&&/*#__PURE__*/_jsx(\"p\",{className:\"errorMsg\",children:errors.user_email.message})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"user_password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"user_password\",placeholder:\"Choose a password\",autoComplete:\"off\",ref:register({required:'Password is required.',minLength:{value:6,message:'Password should have at-least 6 characters.'}}),className:\"\".concat(errors.user_password?'input-error':'')}),errors.user_password&&/*#__PURE__*/_jsx(\"p\",{className:\"errorMsg\",children:errors.user_password.message})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Next\"})]})});};export default FirstStep;","map":{"version":3,"sources":["F:/College/0.Project/thamza-react-js-landing-page-template/Thamza_React_v1.0.0/Landing/BDUP/src/component/FirstStep.js"],"names":["React","useForm","Form","Button","motion","FirstStep","props","user","defaultValues","first_name","last_name","user_email","user_password","register","handleSubmit","errors","onSubmit","data","updateUser","console","log","history","push","x","stiffness","required","pattern","value","message","minLength"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst FirstStep = (props) => {\r\n  const { user } = props;\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      user_email: user.user_email,\r\n      user_password: user.user_password\r\n    }\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    props.updateUser(data);\r\n    console.log(props); \r\n    props.history.push('/second');\r\n  };\r\n\r\n  return (\r\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <motion.div\r\n        className=\"col-md-6 offset-md-3\"\r\n        initial={{ x: '-100vw' }}\r\n        animate={{ x: 0 }}\r\n        transition={{ stiffness: 150 }}\r\n      >\r\n        <Form.Group controlId=\"first_name\">\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            placeholder=\"Enter your first name\"\r\n            autoComplete=\"off\"\r\n            ref={register({\r\n              required: 'First name is required.',\r\n              pattern: {\r\n                value: /^[a-zA-Z]+$/,\r\n                message: 'First name should contain only characters.'\r\n              }\r\n            })}\r\n            className={`${errors.first_name ? 'input-error' : ''}`}\r\n          />\r\n          {errors.first_name && (\r\n            <p className=\"errorMsg\">{errors.first_name.message}</p>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"last_name\">\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            placeholder=\"Enter your last name\"\r\n            autoComplete=\"off\"\r\n            ref={register({\r\n              required: 'Last name is required.',\r\n              pattern: {\r\n                value: /^[a-zA-Z]+$/,\r\n                message: 'Last name should contain only characters.'\r\n              }\r\n            })}\r\n            className={`${errors.last_name ? 'input-error' : ''}`}\r\n          />\r\n          {errors.last_name && (\r\n            <p className=\"errorMsg\">{errors.last_name.message}</p>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group controlId=\"user_email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"user_email\"\r\n            placeholder=\"Enter your email address\"\r\n            autoComplete=\"off\"\r\n            ref={register({\r\n              required: 'Email is required.',\r\n              pattern: {\r\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                message: 'Email is not valid.'\r\n              }\r\n            })}\r\n            className={`${errors.user_email ? 'input-error' : ''}`}\r\n          />\r\n          {errors.user_email && (\r\n            <p className=\"errorMsg\">{errors.user_email.message}</p>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"user_password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"user_password\"\r\n            placeholder=\"Choose a password\"\r\n            autoComplete=\"off\"\r\n            ref={register({\r\n              required: 'Password is required.',\r\n              minLength: {\r\n                value: 6,\r\n                message: 'Password should have at-least 6 characters.'\r\n              }\r\n            })}\r\n            className={`${errors.user_password ? 'input-error' : ''}`}\r\n          />\r\n          {errors.user_password && (\r\n            <p className=\"errorMsg\">{errors.user_password.message}</p>\r\n          )}\r\n        </Form.Group>\r\n\r\n\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Next\r\n        </Button>\r\n      </motion.div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FirstStep;\r\n"]},"metadata":{},"sourceType":"module"}