{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Bizdateup\\\\src\\\\component\\\\1Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { BASE_API_URL } from '../utils/constants';\nimport { UserContext } from '../App';\nimport { useHistory } from 'react-router-dom';\nimport Deal from \"../pages/Deals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userDetails, setUserDetails] = useState('');\n  let history = useHistory();\n\n  const onSubmit = async data => {\n    console.log(data);\n\n    try {\n      const response = await axios.post(`${BASE_API_URL}/login`, data);\n      dispatch({\n        type: \"user\",\n        payload: true\n      });\n      history.push('/Deals');\n      setSuccessMessage('User with the provided credentials found.');\n      setErrorMessage('');\n      setUserDetails(response.data);\n    } catch (error) {\n      // console.log(error);\n      if (error.response) {\n        console.log('error', error.response.data);\n        setErrorMessage(error.response.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"input-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      children: [errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg login-error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"successMsg\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"first_name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"user_email\",\n          placeholder: \"Enter your email address\",\n          ref: register({\n            required: 'Email is required.',\n            pattern: {\n              value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n              message: 'Email is not valid.'\n            }\n          }),\n          className: `${errors.user_email ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), errors.user_email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.user_email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Passwords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"user_password\",\n          placeholder: \"Choose a password\",\n          ref: register({\n            required: 'Password is required.',\n            minLength: {\n              value: 6,\n              message: 'Password should have at-least 6 characters.'\n            }\n          }),\n          className: `${errors.user_password ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), errors.user_password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.user_password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Check Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"S3656WEVERWeeGD9M9B7vUW8Sq4=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/user/Downloads/Bizdateup/src/component/1Login.js"],"names":["React","useContext","useState","useForm","Form","Button","axios","BASE_API_URL","UserContext","useHistory","Deal","Login","state","dispatch","register","handleSubmit","errors","successMessage","setSuccessMessage","errorMessage","setErrorMessage","userDetails","setUserDetails","history","onSubmit","data","console","log","response","post","type","payload","push","error","required","pattern","value","message","user_email","minLength","user_password"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { BASE_API_URL } from '../utils/constants';\r\nimport { UserContext } from '../App';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Deal from \"../pages/Deals\";\r\nconst Login = () => {\r\n  const {state, dispatch} = useContext(UserContext);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [userDetails, setUserDetails] = useState('');\r\n  let history =  useHistory();\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n\r\n    try {\r\n      const response = await axios.post(`${BASE_API_URL}/login`, data);\r\n      dispatch({type:\"user\", payload:true});\r\n      history.push('/Deals')\r\n      setSuccessMessage('User with the provided credentials found.');\r\n      setErrorMessage('');\r\n      setUserDetails(response.data);\r\n    } catch (error) {\r\n      // console.log(error);\r\n      if (error.response) {\r\n        console.log('error', error.response.data);\r\n        setErrorMessage(error.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        {errorMessage ? (\r\n          <p className=\"errorMsg login-error\">{errorMessage}</p>\r\n        ) :  (\r\n          <div>\r\n            <p className=\"successMsg\">{successMessage}</p>\r\n            {/* {history.push('/Deals')} */}\r\n            {/* {userDetails && (\r\n              <div className=\"user-details\">\r\n                <p>Following are the user details:</p>\r\n                <div>First name: {userDetails.first_name}</div>\r\n                <div>Last name: {userDetails.last_name}</div>\r\n                <div>Email: {userDetails.user_email}</div>\r\n                <div>Country: {userDetails.country}</div>\r\n                <div>State: {userDetails.state}</div>\r\n                <div>City: {userDetails.city}</div>\r\n              </div>\r\n            )} */}\r\n          </div>\r\n        )}\r\n        <Form.Group controlId=\"first_name\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"user_email\"\r\n            placeholder=\"Enter your email address\"\r\n            ref={register({\r\n              required: 'Email is required.',\r\n              pattern: {\r\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                message: 'Email is not valid.'\r\n              }\r\n            })}\r\n            className={`${errors.user_email ? 'input-error' : ''}`}\r\n          />\r\n          {errors.user_email && (\r\n            <p className=\"errorMsg\">{errors.user_email.message}</p>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Passwords</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"user_password\"\r\n            placeholder=\"Choose a password\"\r\n            ref={register({\r\n              required: 'Password is required.',\r\n              minLength: {\r\n                value: 6,\r\n                message: 'Password should have at-least 6 characters.'\r\n              }\r\n            })}\r\n            className={`${errors.user_password ? 'input-error' : ''}`}\r\n          />\r\n          {errors.user_password && (\r\n            <p className=\"errorMsg\">{errors.user_password.message}</p>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Check Login\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}