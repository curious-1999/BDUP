{"ast":null,"code":"var _jsxFileName = \"F:\\\\College\\\\0.Project\\\\thamza-react-js-landing-page-template\\\\Thamza_React_v1.0.0\\\\Landing\\\\BDUP\\\\src\\\\component\\\\SecondStep.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecondStep = props => {\n  _s();\n\n  //const [designation, setDesignation] = useState([]);\n  // const [gender, setGender] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedDesignation, setSelectedDesignation] = useState('');\n  const [selectedGender, setSelectedGender] = useState('');\n  const {\n    user\n  } = props;\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    defaultValues: {\n      phone: user.phone,\n      age: user.age\n    }\n  });\n  let designation = [{\n    id: 1,\n    name: 'Founder'\n  }, {\n    id: 2,\n    name: 'Co-founder'\n  }, {\n    id: 3,\n    name: 'Professional'\n  }, {\n    id: 4,\n    name: 'Freelancer'\n  }];\n  let gender = [{\n    id: 1,\n    name: 'Male'\n  }, {\n    id: 2,\n    name: 'Female'\n  }, {\n    id: 3,\n    name: 'Other'\n  }];\n  useEffect(() => {\n    const getDesignation = async () => {\n      try {\n        setIsLoading(true); // allCountries = result?.map(({ isoCode, name }) => ({\n        //   isoCode,\n        //   name\n        // }));\n\n        const [{\n          id: first_designation\n        } = {}] = designation;\n        setSelectedDesignation(first_designation);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error); //setDesignation([]);\n\n        setIsLoading(false);\n      }\n    };\n\n    getDesignation();\n  }, []);\n  useEffect(() => {\n    const getGender = async () => {\n      try {\n        setIsLoading(true); // allCountries = result?.map(({ isoCode, name }) => ({\n        //   isoCode,\n        //   name\n        // }));\n\n        const [{\n          id: first_gender\n        } = {}] = gender;\n        setSelectedGender(first_gender);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n      }\n    };\n\n    getGender();\n  }, []);\n\n  const onSubmit = data => {\n    var _designation$find, _gender$find;\n\n    const updatedData = {\n      designations: (_designation$find = designation.find(designation => {\n        return designation.id == selectedDesignation;\n      })) === null || _designation$find === void 0 ? void 0 : _designation$find.name,\n      genders: (_gender$find = gender.find(gender => {\n        return gender.id == selectedGender;\n      })) === null || _gender$find === void 0 ? void 0 : _gender$find.name\n    };\n    console.log(designation);\n    console.log(gender);\n    console.log(updatedData.designations);\n    console.log(updatedData.genders);\n    props.updateUser({ ...data,\n      ...updatedData\n    }); //console.log(props) ; \n\n    props.history.push('/fourth');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"input-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"col-md-6 offset-md-3\",\n      initial: {\n        x: '-100vw'\n      },\n      animate: {\n        x: 0\n      },\n      transition: {\n        stiffness: 150\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"phone\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Mobile No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"phone\",\n          placeholder: \"Enter your mobile number\",\n          autoComplete: \"off\",\n          ref: register({\n            required: 'Mobile number is required.',\n            pattern: {\n              value: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/i,\n              message: 'Mobile number should be of 10 digits'\n            }\n          }),\n          className: `${errors.phone ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.phone.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"age\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"age\",\n          placeholder: \"age\",\n          autoComplete: \"off\",\n          ref: register({\n            required: 'age is required.',\n            pattern: {\n              value: /^\\d+$/,\n              message: 'Should be number'\n            }\n          }),\n          className: `${errors.age ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), errors.age && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.age.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"designation\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading\",\n          children: \"Loading destinations. Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Designation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          name: \"designation\",\n          value: selectedDesignation,\n          onChange: event => setSelectedDesignation(event.target.value),\n          children: designation.map(({\n            id,\n            name\n          }) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"gender\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading\",\n          children: \"Loading genders. Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          name: \"gender\",\n          value: selectedGender,\n          onChange: event => setSelectedGender(event.target.value),\n          children: gender.map(({\n            id,\n            name\n          }) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SecondStep, \"rpklXamYhx9YtjCXBe5WucA/tRg=\", false, function () {\n  return [useForm];\n});\n\n_c = SecondStep;\nexport default SecondStep;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecondStep\");","map":{"version":3,"sources":["F:/College/0.Project/thamza-react-js-landing-page-template/Thamza_React_v1.0.0/Landing/BDUP/src/component/SecondStep.js"],"names":["React","useState","useEffect","useForm","Form","Button","motion","SecondStep","props","isLoading","setIsLoading","selectedDesignation","setSelectedDesignation","selectedGender","setSelectedGender","user","register","handleSubmit","errors","defaultValues","phone","age","designation","id","name","gender","getDesignation","first_designation","error","console","log","getGender","first_gender","onSubmit","data","updatedData","designations","find","genders","updateUser","history","push","x","stiffness","required","pattern","value","message","event","target","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\n\r\nconst SecondStep = (props) => {\r\n  //const [designation, setDesignation] = useState([]);\r\n  // const [gender, setGender] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [selectedDesignation, setSelectedDesignation] = useState('');\r\n  const [selectedGender, setSelectedGender] = useState('');\r\n\r\n  const { user } = props;\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      phone: user.phone,\r\n      age: user.age,\r\n    }\r\n  });\r\n\r\n  let designation = [\r\n    {\r\n      id: 1 ,\r\n      name: 'Founder'\r\n    },\r\n    {\r\n      id: 2 ,\r\n      name: 'Co-founder'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Professional'\r\n    },\r\n    {\r\n      id: 4 ,\r\n      name: 'Freelancer'\r\n    },\r\n  \r\n  ];\r\n\r\n\r\n  let gender = [\r\n    {\r\n      id: 1 ,\r\n      name: 'Male'\r\n    },\r\n    {\r\n      id: 2 ,\r\n      name: 'Female'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Other'\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const getDesignation = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        // allCountries = result?.map(({ isoCode, name }) => ({\r\n        //   isoCode,\r\n        //   name\r\n        // }));\r\n        const [{ id: first_designation } = {}] = designation;\r\n        setSelectedDesignation(first_designation);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        //setDesignation([]);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getDesignation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getGender = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        // allCountries = result?.map(({ isoCode, name }) => ({\r\n        //   isoCode,\r\n        //   name\r\n        // }));\r\n        const [{ id: first_gender } = {}] = gender;\r\n        setSelectedGender(first_gender);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getGender();\r\n  }, []);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    const updatedData = {\r\n        designations: designation.find(\r\n          (designation) => { \r\n            return (designation.id == selectedDesignation)\r\n          }\r\n        )?.name,\r\n        genders: gender.find(\r\n          (gender) => {\r\n            return (gender.id == selectedGender)}\r\n        )?.name,\r\n      };\r\n      console.log(designation);\r\n      console.log(gender);\r\n      console.log(updatedData.designations);\r\n      console.log(updatedData.genders);\r\n\r\n    props.updateUser({\r\n        ...data,\r\n        ...updatedData\r\n      });\r\n    //console.log(props) ; \r\n    props.history.push('/fourth');\r\n  };\r\n\r\n  return (\r\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <motion.div\r\n        className=\"col-md-6 offset-md-3\"\r\n        initial={{ x: '-100vw' }}\r\n        animate={{ x: 0 }}\r\n        transition={{ stiffness: 150 }}\r\n      >\r\n         <Form.Group controlId=\"phone\">\r\n          <Form.Label>Mobile No.</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter your mobile number\"\r\n            autoComplete=\"off\"\r\n            ref={register({\r\n              required: 'Mobile number is required.',\r\n              pattern: {\r\n                value: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/i,\r\n                message: 'Mobile number should be of 10 digits'\r\n              }\r\n            })}\r\n            className={`${errors.phone ? 'input-error' : ''}`}\r\n          />\r\n          {errors.phone && (\r\n            <p className=\"errorMsg\">{errors.phone.message}</p>\r\n          )}\r\n        </Form.Group>\r\n\r\n\r\n        <Form.Group controlId=\"age\">\r\n          <Form.Label>Age</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"age\"\r\n            placeholder=\"age\"\r\n            autoComplete=\"off\"\r\n            ref={register({\r\n              required: 'age is required.',\r\n              pattern: {\r\n                value: /^\\d+$/,\r\n                message: 'Should be number'\r\n              }\r\n            })}\r\n            className={`${errors.age ? 'input-error' : ''}`}\r\n          />\r\n          {errors.age && (\r\n            <p className=\"errorMsg\">{errors.age.message}</p>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group controlId=\"designation\">\r\n          {isLoading && (\r\n            <p className=\"loading\">Loading destinations. Please wait...</p>\r\n          )}\r\n          <Form.Label>Designation</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"designation\"\r\n            value={selectedDesignation}\r\n            onChange={(event) => setSelectedDesignation(event.target.value)}\r\n          >\r\n            {designation.map(({ id, name }) => (\r\n              <option value={id} key={id}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"gender\">\r\n          {isLoading && (\r\n            <p className=\"loading\">Loading genders. Please wait...</p>\r\n          )}\r\n          <Form.Label>Gender</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"gender\"\r\n            value={selectedGender}\r\n            onChange={(event) => setSelectedGender(event.target.value)}\r\n          >\r\n            {gender.map(({ id, name }) => (\r\n              <option value={id} key={id}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Next\r\n        </Button>\r\n      </motion.div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SecondStep;\r\n"]},"metadata":{},"sourceType":"module"}